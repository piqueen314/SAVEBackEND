@model SaveOrg.ViewModels.Student

@{
  ViewBag.Title = "Edit";
}

@*http://stackoverflow.com/questions/4051504/asp-net-mvc-add-child-records-dynamically*@

  @using (Html.BeginForm("Edit", "Student"))
  {
    @Html.HiddenFor(x => x.StudentId)
    @Html.HiddenFor(x => x.SetupUser)
    @Html.HiddenFor(x => x.SetupDate)
    
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
      <h4>Student</h4>
      <hr />
      @Html.ValidationSummary(true, "", new { @class = "text-danger" })
      @Html.HiddenFor(model => model.StudentId)

      <div class="form-group">
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group">
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group">
        @Html.LabelFor(model => model.GenderFlag, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.EditorFor(model => model.GenderFlag, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.GenderFlag, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group">
        @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
          <button id="btnAddAddress">Add Address</button>
        </div>
      </div>

      <div id="AddressEdit">
        @*this is where the editor template will land*@
      </div>

      <div id="AddressDisplay">
        @*this is where you keep your collection of saved addresses*@

        @for(var i = 0; i < Model.StudentAddresses.Count; i++)
        {
          @Html.Partial("DisplayTemplates/Address", Model.StudentAddresses[i].Address)
        }

      </div>

      @*Model.StudentAddresses[0].Address*@

      <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
          <input type="submit" value="Save" class="btn btn-default" />
        </div>
      </div>
    </div>
  }

  <div>
    @Html.ActionLink("Back to List", "Index")
  </div>

@section scripts {
  @Scripts.Render("~/Bundles/Student/Edit")
}